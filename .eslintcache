[{"C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\index.js":"1","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\reportWebVitals.js":"2","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\firebase.js":"3","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\admin\\Admin.jsx":"4","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\store\\index.js":"5","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\App.js":"6","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\store\\reducers\\index.js":"7","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\store\\reducers\\posts.js":"8","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\store\\selectors\\index.js":"9","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\Footer.jsx":"10","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\Header.jsx":"11","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\Posts.jsx":"12","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\services\\posts.firebase.api.js":"13","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\store\\actions\\posts.actions.js":"14","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\store\\actions\\actions.types.js":"15","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\admin\\AdminPosts.jsx":"16","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\Post.jsx":"17","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\admin\\PostContentForm.jsx":"18","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\LatestPosts.jsx":"19","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\admin\\AdminMenu.jsx":"20","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\admin\\Signup.jsx":"21","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\Auth.js":"22","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\PrivateRoute.jsx":"23","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\admin\\Login.jsx":"24","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\Category.jsx":"25"},{"size":351,"mtime":1608070508220,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":499162500000,"results":"28","hashOfConfig":"27"},{"size":743,"mtime":1608057971903,"results":"29","hashOfConfig":"27"},{"size":1780,"mtime":1608074781730,"results":"30","hashOfConfig":"27"},{"size":333,"mtime":1608048683703,"results":"31","hashOfConfig":"27"},{"size":1198,"mtime":1608386611439,"results":"32","hashOfConfig":"27"},{"size":156,"mtime":1607338563014,"results":"33","hashOfConfig":"27"},{"size":987,"mtime":1608074823954,"results":"34","hashOfConfig":"27"},{"size":74,"mtime":1607252723518,"results":"35","hashOfConfig":"27"},{"size":895,"mtime":1607246146661,"results":"36","hashOfConfig":"27"},{"size":2422,"mtime":1608388270115,"results":"37","hashOfConfig":"27"},{"size":2238,"mtime":1608386623616,"results":"38","hashOfConfig":"27"},{"size":1769,"mtime":1608057803590,"results":"39","hashOfConfig":"27"},{"size":1289,"mtime":1608074821788,"results":"40","hashOfConfig":"27"},{"size":160,"mtime":1607879992302,"results":"41","hashOfConfig":"27"},{"size":6744,"mtime":1608405006549,"results":"42","hashOfConfig":"27"},{"size":1396,"mtime":1608388498264,"results":"43","hashOfConfig":"27"},{"size":6359,"mtime":1608398694569,"results":"44","hashOfConfig":"27"},{"size":2009,"mtime":1607851889336,"results":"45","hashOfConfig":"27"},{"size":1017,"mtime":1608058627789,"results":"46","hashOfConfig":"27"},{"size":2324,"mtime":1608061609795,"results":"47","hashOfConfig":"27"},{"size":462,"mtime":1608058921796,"results":"48","hashOfConfig":"27"},{"size":522,"mtime":1608062267458,"results":"49","hashOfConfig":"27"},{"size":1497,"mtime":1608071555490,"results":"50","hashOfConfig":"27"},{"size":291,"mtime":1608394621493,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"6k9swz",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\index.js",[],["110","111"],"C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\reportWebVitals.js",[],"C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\firebase.js",[],"C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\admin\\Admin.jsx",["112"],"C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\store\\index.js",[],"C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\App.js",[],"C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\store\\reducers\\index.js",[],"C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\store\\reducers\\posts.js",[],"C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\store\\selectors\\index.js",[],"C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\Footer.jsx",["113","114","115","116","117"],"import React from 'react'\r\nimport '../styles/footer.css'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"footer-wrapper\">\r\n              <div className=\"logo-name\">\r\n               <h1>VIRTUES</h1>\r\n              </div>\r\n              <div className=\"catagories\">\r\n                <ul>\r\n                  <li><a href=\"#\">contact</a></li>\r\n                  <li><a href=\"#\">about</a></li>\r\n                  <li><a href=\"#\">Active</a></li>\r\n                  <li><a href=\"#\">Mindfulness</a></li>\r\n                  <li><a href=\"#\">Beauty</a></li>\r\n                </ul>\r\n              </div>\r\n              <div className=\"social\">\r\n\r\n              </div>\r\n\r\n              <div className=\"rights\">\r\n                <p>Developed by @AviRevah</p>\r\n              </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n",["118","119"],"C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\Header.jsx",["120"],"import React, { useEffect, useState } from 'react'\r\nimport '../styles/header.css'\r\nimport { Link } from \"react-router-dom\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\n\r\nconst Header = () => {\r\n  const [ showMobileMenu, setShowMobileMenu ] = useState(false)\r\n  const [ show, setShow ] = useState(false)\r\n\r\n  const handleToggleMenu = () => {\r\n    setShowMobileMenu(!showMobileMenu)\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", () => {\r\n      if(window.scrollY > 45) {\r\n        setShow(true)\r\n      } else setShow(false) \r\n    });\r\n    return () => {\r\n      window.removeEventListener(\"scroll\")\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <div className='header' >\r\n        <div className={`header-navbar ${show && \"header-navbar__light\"}`} >\r\n            <div className=\"logo\">\r\n              <Link to=\"/\"><span className=\"logo-name\">VIRTUES</span></Link>\r\n            </div>\r\n            <div className=\"topBotomBordersOut\">\r\n              <ul>\r\n                {/* <li><Link to=\"/admin\">ADMIN</Link></li> */}\r\n                <li><Link to=\"/\">contact</Link></li>\r\n                <li><Link to=\"/category/life\">life</Link></li>\r\n                <li><Link to=\"/category/food\">food</Link></li>\r\n                <li><Link to=\"/category/body and soul\">body & soul</Link></li>\r\n                <li><Link to=\"/category/beauty\">Beauty</Link></li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"burger\" onClick={handleToggleMenu}>\r\n              <span></span>\r\n              <span></span>\r\n              <span></span>\r\n            </div>\r\n           \r\n              <nav className={`${!showMobileMenu ? \"mobile_menu\" : \"mobile_menu_open\"}`}>\r\n                <CloseIcon id=\"close_menu_icon\" onClick={handleToggleMenu}/>\r\n                <ul>\r\n                  <li><Link to=\"/\">Beauty</Link></li>\r\n                  <li><Link to=\"/\">Body & Soul</Link></li>\r\n                  <li><Link to=\"/\">Food</Link></li>\r\n                  <li><Link to=\"/\">Life</Link></li>\r\n                  <li><Link to=\"/\">Contact</Link></li>\r\n                </ul>\r\n                <div className=\"social\">\r\n                  <a href=\"\" target=\"_blank\">\r\n                   <InstagramIcon id=\"inst\"/>\r\n                  </a>\r\n                </div>\r\n              </nav>\r\n\r\n            \r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\Posts.jsx",["121"],"C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\services\\posts.firebase.api.js",[],"C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\store\\actions\\posts.actions.js",[],"C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\store\\actions\\actions.types.js",[],"C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\admin\\AdminPosts.jsx",["122","123","124","125"],"import React, { useState } from 'react';\r\nimport '../../styles/adminPosts.css';\r\nimport { deletePostAction } from '../../store/actions/posts.actions';\r\nimport { useDispatch } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport {Button} from '@material-ui/core';\r\n\r\nexport const AdminPosts = ({ allPosts, handleEdit }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [ msg, setMsg ] = useState('')\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n      justifyContent: 'space-around',\r\n      overflow: 'hidden',\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    gridList: {\r\n      flexWrap: 'nowrap',\r\n      // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\r\n      transform: 'translateZ(0)',\r\n    },\r\n    title: {\r\n      color: theme.palette.primary.light,\r\n    },\r\n    titleBar: {\r\n      background:\r\n        'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleDelete = (post) => {\r\n    setMsg('Post Deleted!')\r\n    dispatch(deletePostAction(post))\r\n    handleClick()\r\n  }\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n  \r\n  \r\n  return (\r\n    <div className=\"admin-posts\">\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n        message={msg}\r\n        action={\r\n          <React.Fragment>\r\n            <Button color=\"secondary\" size=\"small\" onClick={handleClose}>\r\n              UNDO\r\n            </Button>\r\n            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\r\n              <CloseIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </React.Fragment>\r\n        }\r\n      />\r\n      <div className=\"beauty_posts\">\r\n        <h1>BEAUTY POSTS...</h1>\r\n        <div className={classes.root}>\r\n          <GridList className={classes.gridList} cols={2.5}>\r\n            {allPosts.map((item) => {\r\n              if(item.catagory === 'beauty') {\r\n                return (\r\n                  <GridListTile key={item.image}>\r\n                    <img src={item.image} alt={item.title} />\r\n                    <GridListTileBar\r\n                      title={item.title}\r\n                      actionIcon={\r\n                        <IconButton aria-label={`star ${item.title}`} id=\"actions-btns\">\r\n                          <DeleteIcon onClick={() => handleDelete(item)} className={classes.title} />\r\n                          <EditIcon onClick={() => handleEdit(item)} className={classes.title} />\r\n                        </IconButton>\r\n                      }\r\n                    />\r\n                  </GridListTile>\r\n                )\r\n              }\r\n            }\r\n            )}\r\n          </GridList>\r\n        </div>\r\n      </div>\r\n      <div className=\"food_posts\">\r\n      <h1>FOOD POSTS...</h1>\r\n        <div className={classes.root}>\r\n          <GridList className={classes.gridList} cols={2.5}>\r\n            {allPosts.map((item) => {\r\n              if(item.catagory === 'food') {\r\n                return (\r\n                  <GridListTile key={item.image}>\r\n                    <img src={item.image} alt={item.title} />\r\n                    <GridListTileBar\r\n                      title={item.title}\r\n                      actionIcon={\r\n                        <IconButton aria-label={`star ${item.title}`}>\r\n                          <DeleteIcon onClick={() => handleDelete(item)} className={classes.title} />\r\n                          <EditIcon onClick={() => handleEdit(item)} className={classes.title} />\r\n                        </IconButton>\r\n                      }\r\n                    />\r\n                  </GridListTile>\r\n                )\r\n              }\r\n            }\r\n            )}\r\n          </GridList>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"life_posts\">\r\n        <h1>LIFE POSTS...</h1>\r\n        <div className={classes.root}>\r\n          <GridList className={classes.gridList} cols={2.5}>\r\n            {allPosts.map((item) => {\r\n              if(item.catagory === 'life') {\r\n                return (\r\n                  <GridListTile key={item.image}>\r\n                    <img src={item.image} alt={item.title} />\r\n                    <GridListTileBar\r\n                      title={item.title}\r\n                      actionIcon={\r\n                        <IconButton aria-label={`star ${item.title}`}>\r\n                          <DeleteIcon onClick={() => handleDelete(item)} className={classes.title} />\r\n                          <EditIcon onClick={() => handleEdit(item)} className={classes.title} />\r\n                        </IconButton>\r\n                      }\r\n                    />\r\n                  </GridListTile>\r\n                )\r\n              }\r\n            }\r\n            )}\r\n          </GridList>\r\n        </div>\r\n      </div>\r\n      <div className=\"life_posts\">\r\n        <h1>B&S POSTS...</h1>\r\n        <div className={classes.root}>\r\n          <GridList className={classes.gridList} cols={2.5}>\r\n            {allPosts.map((item) => {\r\n              if(item.catagory === 'body and soul') {\r\n                return (\r\n                  <GridListTile key={item.image}>\r\n                    <img src={item.image} alt={item.title} />\r\n                    <GridListTileBar\r\n                      title={item.title}\r\n                      actionIcon={\r\n                        <IconButton aria-label={`star ${item.title}`}>\r\n                          <DeleteIcon onClick={() => handleDelete(item)} className={classes.title} />\r\n                          <EditIcon onClick={() => handleEdit(item)} className={classes.title} />\r\n                        </IconButton>\r\n                      }\r\n                    />\r\n                  </GridListTile>\r\n                )\r\n              }\r\n            }\r\n            )}\r\n          </GridList>\r\n        </div>\r\n      </div>\r\n     \r\n    </div>\r\n  )\r\n}","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\Post.jsx",["126","127","128","129","130","131"],"C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\admin\\PostContentForm.jsx",["132","133","134","135"],"import React, { useState, useEffect } from 'react';\r\nimport '../../styles/postContentForm.css';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getPostsAction, createPostAction, setPostAction } from '../../store/actions/posts.actions';\r\nimport ReactQuill, { Quill, Mixin, Toolbar } from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport { storage } from '../../firebase';\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Select,\r\n  MenuItem,\r\n  InputLabel,\r\n  FormControl\r\n} from '@material-ui/core'\r\n\r\nexport const PostContentForm = ({ editPost, setEditPost }) => {\r\n  const [ image, setImage ] = useState(null);\r\n  const [ value, setValue ] = useState('');\r\n  const [ editValue, setEditValue ] = useState('');\r\n  const [ readyToPost, setReadyToPost ] = useState(false)\r\n  const [ newPost, setNewPost ] = useState({\r\n    imageURL: '',\r\n    catagory: '',\r\n    title: '',\r\n    description: '',\r\n    content: value\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    setEditValue(editPost.content)\r\n  }, [editPost])\r\n\r\n  useEffect(() => {\r\n    dispatch(getPostsAction())\r\n  },[])  \r\n\r\n  const QuillModules = {\r\n    toolbar: [\r\n      [{ 'header': [1, 2, false] }],\r\n      ['bold', 'italic', 'underline','strike', 'blockquote'],\r\n      [{'list': 'ordered'}, {'list': 'bullet'}, {'indent': '-1'}, {'indent': '+1'}],\r\n      ['link', 'image'],\r\n      ['clean'],\r\n      [{ 'direction': 'rtl'}],\r\n      ['image', 'code-block'],\r\n      ['align']\r\n    ],\r\n  }\r\n  const formats = [\r\n    'header',\r\n    'bold', 'italic', 'underline', 'strike', 'blockquote',\r\n    'list', 'bullet', 'indent',\r\n    'link', 'image'\r\n  ]\r\n  \r\n\r\n  \r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if(editPost.title.length === 0) {\r\n      const uploadTask = storage.ref(`images/${image.name}`).put(image);\r\n      uploadTask.on(\r\n        'state_changed', (snapshot) => {\r\n          const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n          console.log('Upload is ' + progress + '% done');\r\n        }, (error) => {\r\n          console.log(error)\r\n        },\r\n        () => {\r\n          uploadTask.snapshot.ref.getDownloadURL().then((url) => {\r\n            let uploadedPost = Object.assign(newPost, {imageURL:url})\r\n            setNewPost(uploadedPost);\r\n            dispatch(createPostAction(uploadedPost))\r\n            console.log('File available at','image const', url);\r\n            resetInputs();\r\n            setValue('')\r\n            setReadyToPost(false)\r\n          })\r\n        }\r\n      )\r\n    } else {\r\n      dispatch(setPostAction(editPost))\r\n      resetInputs();\r\n      setEditPost('')\r\n      setReadyToPost(false)\r\n    }\r\n  }\r\n\r\n  const resetInputs = () => {\r\n    setNewPost({\r\n      imageURL: '',\r\n      catagory: '',\r\n      title: '',\r\n      description: '',\r\n      content: ''\r\n    })\r\n    setEditPost({\r\n      id: '',\r\n      imageURL: '',\r\n      catagory: '',\r\n      title: '',\r\n      description: '',\r\n      content: ''\r\n    })\r\n  }\r\n\r\n  const saveEditorContent = () => {\r\n    if(editPost.title.length === 0) {\r\n      setNewPost({\r\n        ...newPost,\r\n        content: value\r\n      })\r\n      setReadyToPost(true)\r\n    } else {\r\n      setEditPost({\r\n        ...editPost,\r\n        content: editValue\r\n      })\r\n      setReadyToPost(true)\r\n    }\r\n  }\r\n    \r\n  return (\r\n    <div className=\"form-container\">\r\n        <FormControl required className=\"post-form\">\r\n          <InputLabel htmlFor=\"atagory-select\">CATAGORY</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"catagory-select\"\r\n              name=\"catagory\"\r\n              value={editPost.catagory ? editPost.catagory : newPost.catagory}\r\n              onChange={(e) => {setNewPost({...newPost, catagory: e.target.value})}}\r\n              >\r\n              <MenuItem value='beauty'>BEAUTY</MenuItem>\r\n              <MenuItem value='body and soul'>BODY & SOUL</MenuItem>\r\n              <MenuItem value='food'>FOOD</MenuItem>\r\n              <MenuItem value='life'>LIFE</MenuItem>\r\n            </Select>\r\n            <TextField\r\n              className=\"input\"\r\n              required\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"title\"\r\n              label=\"POST TITLE\"\r\n              type=\"text\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={editPost.title ? editPost.title : newPost.title}\r\n              onChange={editPost.title ? (e) => setEditPost({...editPost, title: e.target.value}) :(e) => setNewPost({...newPost, title: e.target.value })}\r\n            />\r\n            <TextField\r\n              className=\"input\"\r\n              required\r\n              variant=\"outlined\"\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"description\"\r\n              label=\"DESCRIPTION\"\r\n              type=\"text\"\r\n              fullWidth\r\n              value={editPost.description ? editPost.description : newPost.description}\r\n              onChange={editPost.description ? (e) => setEditPost({...editPost, description: e.target.value}) : (e) => setNewPost({...newPost, description: e.target.value })}\r\n            />\r\n            <TextField\r\n              required\r\n              className=\"input\"\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"image\"\r\n              label=\"image\"\r\n              type=\"file\"\r\n              fullWidth\r\n              onChange={(e) => setImage(e.target.files[0])}\r\n            />\r\n            <ReactQuill className=\"editor-quill\" modules={QuillModules} formats={formats} placeholder=\"התחילי לכתוב...\"  theme=\"snow\" onChange={editPost.content ? setEditValue : setValue} value={editPost.content ? editValue : value} style={{height:\"400px\"}} />\r\n            <div className=\"btns-group\">\r\n              <Button className=\"btn\" variant=\"contained\" color=\"secondary\" onClick={saveEditorContent}>Save</Button>\r\n              <Button className=\"btn\" onClick={handleSubmit} variant=\"contained\" color=\"secondary\" type=\"submit\" disabled={!readyToPost}>\r\n                {`${editPost.title ? \"Submit Changes\" : \"Submit Post\"}`}\r\n              </Button>\r\n              <Button className=\"btn\" variant=\"contained\" color=\"secondary\" onClick={resetInputs}>\r\n                Cencel\r\n              </Button>\r\n            </div>\r\n        </FormControl>\r\n    </div>\r\n  )\r\n}","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\LatestPosts.jsx",["136","137"],"import React from 'react';\r\nimport '../styles/latestPosts.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  Card,\r\n  CardActionArea,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  Button,\r\n  Typography,\r\n} from '@material-ui/core';\r\n\r\nexport const LatestPosts = ({posts}) => {\r\n\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      maxWidth: 345,\r\n    },\r\n    media: {\r\n      height: 140,\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n\r\n  const truncate = (str, n) => {\r\n    return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\r\n  }\r\n\r\n  return (\r\n    <div className=\"latest-posts\">\r\n      <div className=\"latest_posts_wrapper\">\r\n        <div className=\"latest_header\">\r\n          <h3>פוסטים אחרונים</h3>\r\n          <hr/>\r\n        </div>\r\n        <div className=\"latest_posts_posts\">\r\n          {posts && \r\n            posts.map((post, i) => {\r\n              while(i < 3) {\r\n                return (\r\n                  <Card id=\"card\" className={`${classes.root}`} key={post.id}>\r\n                    <CardActionArea>\r\n                      <CardMedia\r\n                        id=\"image\"\r\n                        className={classes.media}\r\n                        image={post.image}\r\n                        title=\"Contemplative Reptile\"\r\n                      />\r\n                      <CardContent>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                          {post.title}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                          {truncate(post.description, 30)}\r\n                        </Typography>\r\n                      </CardContent>\r\n                    </CardActionArea>\r\n                    <CardActions>\r\n                   \r\n                    </CardActions>\r\n                  </Card>\r\n                )\r\n              }\r\n            })\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\admin\\AdminMenu.jsx",["138"],"import React, { useState } from 'react'\r\nimport firebaseApp from '../../firebase'\r\nimport { Button, Tooltip } from '@material-ui/core'\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\r\nexport const AdminMenu = ({ setShowCreatePost, showCreatePost, showPosts, setShowPosts }) => {\r\n\r\n  return (\r\n    <div>\r\n      <Tooltip title=\"Log Out/Log In\">\r\n        <Button variant=\"secondary\" onClick={()=> firebaseApp.auth().signOut()}>\r\n          <VpnKeyIcon />\r\n        </Button>\r\n      </Tooltip>\r\n      <Tooltip title=\"Show/Minimize Compose Post\">\r\n        <Button variant=\"secondary\" onClick={() => setShowCreatePost(!showCreatePost)}>\r\n          <AddIcon />\r\n        </Button>\r\n      </Tooltip>\r\n      <Tooltip title=\"Show/Minimize All Posts\">\r\n        <Button variant=\"secondary\" onClick={() => setShowPosts(!showPosts)}>\r\n          <VisibilityIcon />\r\n        </Button>\r\n      </Tooltip>\r\n    </div>\r\n  )\r\n}","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\admin\\Signup.jsx",["139"],"C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\Auth.js",[],"C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\PrivateRoute.jsx",[],"C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\admin\\Login.jsx",[],"C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\Category.jsx",["140"],{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":29,"column":6,"nodeType":"147","endLine":29,"endColumn":8,"suggestions":"148"},{"ruleId":"149","severity":1,"message":"150","line":13,"column":23,"nodeType":"151","endLine":13,"endColumn":35},{"ruleId":"149","severity":1,"message":"150","line":14,"column":23,"nodeType":"151","endLine":14,"endColumn":35},{"ruleId":"149","severity":1,"message":"150","line":15,"column":23,"nodeType":"151","endLine":15,"endColumn":35},{"ruleId":"149","severity":1,"message":"150","line":16,"column":23,"nodeType":"151","endLine":16,"endColumn":35},{"ruleId":"149","severity":1,"message":"150","line":17,"column":23,"nodeType":"151","endLine":17,"endColumn":35},{"ruleId":"141","replacedBy":"152"},{"ruleId":"143","replacedBy":"153"},{"ruleId":"149","severity":1,"message":"150","line":58,"column":19,"nodeType":"151","endLine":58,"endColumn":46},{"ruleId":"145","severity":1,"message":"146","line":17,"column":6,"nodeType":"147","endLine":17,"endColumn":8,"suggestions":"154"},{"ruleId":"155","severity":1,"message":"156","line":91,"column":34,"nodeType":"157","messageId":"158","endLine":91,"endColumn":36},{"ruleId":"155","severity":1,"message":"156","line":117,"column":34,"nodeType":"157","messageId":"158","endLine":117,"endColumn":36},{"ruleId":"155","severity":1,"message":"156","line":144,"column":34,"nodeType":"157","messageId":"158","endLine":144,"endColumn":36},{"ruleId":"155","severity":1,"message":"156","line":170,"column":34,"nodeType":"157","messageId":"158","endLine":170,"endColumn":36},{"ruleId":"159","severity":1,"message":"160","line":3,"column":10,"nodeType":"161","messageId":"162","endLine":3,"endColumn":21},{"ruleId":"159","severity":1,"message":"163","line":5,"column":10,"nodeType":"161","messageId":"162","endLine":5,"endColumn":24},{"ruleId":"145","severity":1,"message":"146","line":17,"column":6,"nodeType":"147","endLine":17,"endColumn":8,"suggestions":"164"},{"ruleId":"155","severity":1,"message":"156","line":20,"column":20,"nodeType":"157","messageId":"158","endLine":20,"endColumn":22},{"ruleId":"155","severity":1,"message":"165","line":23,"column":14,"nodeType":"166","messageId":"167","endLine":23,"endColumn":21},{"ruleId":"168","severity":1,"message":"169","line":36,"column":13,"nodeType":"151","endLine":36,"endColumn":43},{"ruleId":"159","severity":1,"message":"170","line":5,"column":22,"nodeType":"161","messageId":"162","endLine":5,"endColumn":27},{"ruleId":"159","severity":1,"message":"171","line":5,"column":29,"nodeType":"161","messageId":"162","endLine":5,"endColumn":34},{"ruleId":"159","severity":1,"message":"172","line":5,"column":36,"nodeType":"161","messageId":"162","endLine":5,"endColumn":43},{"ruleId":"145","severity":1,"message":"146","line":37,"column":5,"nodeType":"147","endLine":37,"endColumn":7,"suggestions":"173"},{"ruleId":"159","severity":1,"message":"174","line":10,"column":3,"nodeType":"161","messageId":"162","endLine":10,"endColumn":9},{"ruleId":"155","severity":1,"message":"156","line":39,"column":33,"nodeType":"157","messageId":"158","endLine":39,"endColumn":35},{"ruleId":"159","severity":1,"message":"175","line":1,"column":17,"nodeType":"161","messageId":"162","endLine":1,"endColumn":25},{"ruleId":"159","severity":1,"message":"176","line":1,"column":27,"nodeType":"161","messageId":"162","endLine":1,"endColumn":38},{"ruleId":"145","severity":1,"message":"177","line":7,"column":6,"nodeType":"147","endLine":7,"endColumn":8,"suggestions":"178"},"no-native-reassign",["179"],"no-negated-in-lhs",["180"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["181"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["179"],["180"],["182"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-unused-vars","'useLocation' is defined but never used.","Identifier","unusedVar","'LinearProgress' is defined but never used.",["183"],"Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Quill' is defined but never used.","'Mixin' is defined but never used.","'Toolbar' is defined but never used.",["184"],"'Button' is defined but never used.","'useState' is defined but never used.","'useCallback' is defined but never used.","React Hook useEffect has a missing dependency: 'match.params'. Either include it or remove the dependency array.",["185"],"no-global-assign","no-unsafe-negation",{"desc":"186","fix":"187"},{"desc":"186","fix":"188"},{"desc":"186","fix":"189"},{"desc":"186","fix":"190"},{"desc":"191","fix":"192"},"Update the dependencies array to be: [dispatch]",{"range":"193","text":"194"},{"range":"195","text":"194"},{"range":"196","text":"194"},{"range":"197","text":"194"},"Update the dependencies array to be: [match.params]",{"range":"198","text":"199"},[884,886],"[dispatch]",[647,649],[651,653],[1103,1105],[178,180],"[match.params]"]