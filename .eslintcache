[{"C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\index.js":"1","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\reportWebVitals.js":"2","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\firebase.js":"3","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\admin\\Admin.jsx":"4","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\store\\index.js":"5","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\App.js":"6","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\store\\reducers\\index.js":"7","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\store\\reducers\\posts.js":"8","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\store\\selectors\\index.js":"9","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\Footer.jsx":"10","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\Header.jsx":"11","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\Posts.jsx":"12","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\services\\posts.firebase.api.js":"13","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\store\\actions\\posts.actions.js":"14","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\store\\actions\\actions.types.js":"15","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\admin\\AdminPosts.jsx":"16","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\Post.jsx":"17","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\admin\\PostContentForm.jsx":"18","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\LatestPosts.jsx":"19","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\admin\\AdminMenu.jsx":"20"},{"size":351,"mtime":1607243517780,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"22"},{"size":555,"mtime":1607422430346,"results":"24","hashOfConfig":"22"},{"size":2341,"mtime":1607896665792,"results":"25","hashOfConfig":"22"},{"size":336,"mtime":1607428893367,"results":"26","hashOfConfig":"22"},{"size":639,"mtime":1607525462561,"results":"27","hashOfConfig":"22"},{"size":156,"mtime":1607338563014,"results":"28","hashOfConfig":"22"},{"size":681,"mtime":1607500996320,"results":"29","hashOfConfig":"22"},{"size":74,"mtime":1607252723518,"results":"30","hashOfConfig":"22"},{"size":895,"mtime":1607246146661,"results":"31","hashOfConfig":"22"},{"size":1407,"mtime":1607525482410,"results":"32","hashOfConfig":"22"},{"size":2323,"mtime":1607858510665,"results":"33","hashOfConfig":"22"},{"size":1745,"mtime":1607880391825,"results":"34","hashOfConfig":"22"},{"size":1251,"mtime":1607880449325,"results":"35","hashOfConfig":"22"},{"size":160,"mtime":1607879992302,"results":"36","hashOfConfig":"22"},{"size":5961,"mtime":1607899267143,"results":"37","hashOfConfig":"22"},{"size":1031,"mtime":1607769313108,"results":"38","hashOfConfig":"22"},{"size":5102,"mtime":1607897243789,"results":"39","hashOfConfig":"22"},{"size":2009,"mtime":1607851889336,"results":"40","hashOfConfig":"22"},{"size":775,"mtime":1607897707843,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"6k9swz",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\index.js",[],["86","87"],"C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\reportWebVitals.js",[],"C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\firebase.js",[],"C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\admin\\Admin.jsx",["88"],"C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\store\\index.js",[],"C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\App.js",[],"C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\store\\reducers\\index.js",[],"C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\store\\reducers\\posts.js",[],["89","90"],"C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\store\\selectors\\index.js",[],"C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\Footer.jsx",["91","92","93","94","95"],"C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\Header.jsx",[],"C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\Posts.jsx",["96","97"],"C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\services\\posts.firebase.api.js",[],"C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\store\\actions\\posts.actions.js",[],"C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\store\\actions\\actions.types.js",[],"C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\admin\\AdminPosts.jsx",["98","99","100","101"],"import React from 'react';\r\nimport '../../styles/adminPosts.css';\r\nimport { deletePostAction, setPostAction } from '../../store/actions/posts.actions';\r\nimport { useDispatch } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nimport {\r\n  Card,\r\n  CardActionArea,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  Button,\r\n  Typography,\r\n} from '@material-ui/core';\r\n\r\nexport const AdminPosts = ({ allPosts, handleEdit }) => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      maxWidth: '100%',\r\n    },\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleDelete = (post) => {\r\n    dispatch(deletePostAction(post))\r\n  }\r\n\r\n  \r\n  return (\r\n    <div className=\"admin-posts\">\r\n      <div className=\"beauty_posts\">\r\n        {\r\n          allPosts.map((item) => {\r\n            if(item.catagory === \"beauty\") {\r\n              return (\r\n                <Card key={item.id} className={`${classes.root} card`} >\r\n                  <CardActionArea>\r\n                    <CardMedia\r\n                      component=\"img\"\r\n                      alt=\"POST IMAGE\"\r\n                      height=\"140\"\r\n                      image={item.image}\r\n                      title=\"Contemplative Reptile\"\r\n                    />\r\n                    <CardContent>\r\n                      <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                        {item.title}\r\n                      </Typography>\r\n                      <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        {item.catagory}\r\n                      </Typography>\r\n                      <Typography className=\"timestamp\">\r\n                      {item.timestamp.toDate().toString()}\r\n                     </Typography>\r\n                    </CardContent>\r\n                  </CardActionArea>\r\n                  <CardActions>\r\n                    \r\n                  <Button size=\"small\" color=\"primary\">\r\n                    <DeleteIcon onClick={() => handleDelete(item)}/>\r\n                  </Button>\r\n                  <Button size=\"small\" color=\"primary\">\r\n                    <EditIcon onClick={() => handleEdit(item)}/>\r\n                  </Button>\r\n                  <Button size=\"small\" color=\"primary\">\r\n                    Click to see post\r\n                  </Button>\r\n                </CardActions>\r\n              </Card>\r\n                ) \r\n            }\r\n          })\r\n        }\r\n      </div>\r\n      <div className=\"body_soul_posts\">\r\n      {\r\n        allPosts.map((item) => {\r\n          if(item.catagory === \"body and soul\") {\r\n            return (\r\n              <Card key={item.id} className={`${classes.root} card`} >\r\n                <CardActionArea>\r\n                  <CardMedia\r\n                    component=\"img\"\r\n                    alt=\"POST IMAGE\"\r\n                    height=\"140\"\r\n                    image={item.image}\r\n                    title=\"Contemplative Reptile\"\r\n                  />\r\n                  <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                      {item.title}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                      {item.catagory}\r\n                    </Typography>\r\n                    <Typography className=\"timestamp\">\r\n                    {item.timestamp.toDate().toString()}\r\n                    </Typography>\r\n                  </CardContent>\r\n                </CardActionArea>\r\n                <CardActions>\r\n                  <Button size=\"small\" color=\"primary\">\r\n                    <DeleteIcon onClick={() => handleDelete(item)}/>\r\n                  </Button>\r\n                  <Button size=\"small\" color=\"primary\">\r\n                    <EditIcon onClick={() => handleEdit(item)}/>\r\n                  </Button>\r\n                  <Button size=\"small\" color=\"primary\">\r\n                    Click to see post\r\n                  </Button>\r\n                </CardActions>\r\n              </Card>\r\n            ) \r\n          }\r\n        })\r\n      }\r\n      </div>\r\n      <div className=\"life_posts\">\r\n      {\r\n        allPosts.map((item) => {\r\n          if(item.catagory === \"life\") {\r\n            return (\r\n              <Card key={item.id} className={`${classes.root} card`} >\r\n                <CardActionArea>\r\n                  <CardMedia\r\n                    component=\"img\"\r\n                    alt=\"POST IMAGE\"\r\n                    height=\"140\"\r\n                    image={item.image}\r\n                    title=\"Contemplative Reptile\"\r\n                  />\r\n                  <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                      {item.title}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                      {item.catagory}\r\n                    </Typography>\r\n                    <Typography className=\"timestamp\">\r\n                    {item.timestamp.toDate().toString()}\r\n                    </Typography>\r\n                  </CardContent>\r\n                </CardActionArea>\r\n                <CardActions>\r\n                  <Button size=\"small\" color=\"primary\">\r\n                    <DeleteIcon onClick={() => handleDelete(item)}/>\r\n                  </Button>\r\n                  <Button size=\"small\" color=\"primary\">\r\n                    <EditIcon onClick={() => handleEdit(item)}/>\r\n                  </Button>\r\n                  <Button size=\"small\" color=\"primary\">\r\n                    Click to see post\r\n                  </Button>\r\n                </CardActions>\r\n              </Card>\r\n            ) \r\n          }\r\n        })\r\n      }\r\n      </div>\r\n      <div className=\"food_posts\">\r\n\r\n      </div>\r\n      \r\n      \r\n    </div>\r\n  )\r\n}","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\Post.jsx",["102","103"],"C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\admin\\PostContentForm.jsx",["104"],"import React, { useState, useEffect } from 'react';\r\nimport '../../styles/postContentForm.css';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getPostsAction, createPostAction } from '../../store/actions/posts.actions';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport { storage } from '../../firebase';\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Select,\r\n  MenuItem,\r\n  InputLabel,\r\n  FormControl\r\n} from '@material-ui/core'\r\n\r\nexport const PostContentForm = ({editPost, setEditPost}) => {\r\n  const [ image, setImage ] = useState(null);\r\n  const [value, setValue] = useState('');\r\n  const [ readyToPost, setReadyToPost ] = useState(false)\r\n  const [ newPost, setNewPost ] = useState({\r\n    imageURL: '',\r\n    catagory: '',\r\n    title: '',\r\n    description: '',\r\n    content: value\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getPostsAction())\r\n  },[])  \r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const uploadTask = storage.ref(`images/${image.name}`).put(image);\r\n    uploadTask.on(\r\n      'state_changed', (snapshot) => {\r\n        const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n        console.log('Upload is ' + progress + '% done');\r\n      }, (error) => {\r\n        console.log(error)\r\n      },\r\n      () => {\r\n        uploadTask.snapshot.ref.getDownloadURL().then((url) => {\r\n          let uploadedPost = Object.assign(newPost, {imageURL:url})\r\n          setNewPost(uploadedPost);\r\n          dispatch(createPostAction(uploadedPost))\r\n          console.log('File available at','image const', url);\r\n          setNewPost({\r\n            imageURL: '',\r\n            catagory: '',\r\n            title: '',\r\n            description: '',\r\n            content: ''\r\n          })\r\n          setValue('')\r\n        })\r\n      }\r\n    )\r\n  }\r\n\r\n  const handleSaveChanges = () => {\r\n    // need to continue coding from here\r\n  }\r\n\r\n  const resetInputs = () => {\r\n    setNewPost({\r\n      imageURL: '',\r\n      catagory: '',\r\n      title: '',\r\n      description: '',\r\n      content: ''\r\n    })\r\n  }\r\n\r\n  const saveEditorContent = () => {\r\n    setNewPost({\r\n      ...newPost,\r\n      content: value\r\n    })\r\n    setReadyToPost(true)\r\n  }\r\n    \r\n  return (\r\n    <div className=\"form-container\">\r\n        <FormControl required className=\"post-form\">\r\n          <InputLabel htmlFor=\"atagory-select\">CATAGORY</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"catagory-select\"\r\n              name=\"catagory\"\r\n              value={editPost ? editPost.catagory : newPost.catagory}\r\n              onChange={(e) => {setNewPost({...newPost, catagory: e.target.value})}}\r\n              >\r\n              <MenuItem value='beauty'>BEAUTY</MenuItem>\r\n              <MenuItem value='body and soul'>BODY & SOUL</MenuItem>\r\n              <MenuItem value='food'>FOOD</MenuItem>\r\n              <MenuItem value='life'>LIFE</MenuItem>\r\n            </Select>\r\n            <TextField\r\n              className=\"input\"\r\n              required\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"title\"\r\n              label=\"POST TITLE\"\r\n              type=\"text\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={editPost ? editPost.title : newPost.title}\r\n              onChange={editPost ? (e) => setEditPost({...editPost, title: e.target.value}) :(e) => setNewPost({...newPost, title: e.target.value })}\r\n            />\r\n            <TextField\r\n              className=\"input\"\r\n              required\r\n              variant=\"outlined\"\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"description\"\r\n              label=\"DESCRIPTION\"\r\n              type=\"text\"\r\n              fullWidth\r\n              value={editPost ? editPost.description : newPost.description}\r\n              onChange={(e) => setNewPost({...newPost, description: e.target.value })}\r\n            />\r\n            <TextField\r\n              required\r\n              className=\"input\"\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"image\"\r\n              label=\"image\"\r\n              type=\"file\"\r\n              fullWidth\r\n              onChange={(e) => setImage(e.target.files[0])}\r\n            />\r\n            <ReactQuill className=\"editor-quill\" theme=\"snow\" onChange={setValue} value={editPost ? editPost.content : value} style={{height:\"300px\"}} />\r\n            <div className=\"btns-group\">\r\n              <Button className=\"btn\" variant=\"contained\" color=\"secondary\" onClick={saveEditorContent}>Save</Button>\r\n              <Button className=\"btn\" onClick={editPost ? handleSaveChanges : handleSubmit} variant=\"contained\" color=\"secondary\" type=\"submit\" disabled={!readyToPost}>\r\n                {editPost ? \"Save Changes\" : \"Submit Post\"}\r\n              </Button>\r\n              <Button className=\"btn\" variant=\"contained\" color=\"secondary\" onClick={resetInputs}>\r\n                Cencel\r\n              </Button>\r\n            </div>\r\n           \r\n        </FormControl>\r\n    </div>\r\n  )\r\n}","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\LatestPosts.jsx",["105","106"],"C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\admin\\AdminMenu.jsx",["107"],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":36,"column":6,"nodeType":"114","endLine":36,"endColumn":8,"suggestions":"115"},{"ruleId":"108","replacedBy":"116"},{"ruleId":"110","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":13,"column":23,"nodeType":"120","endLine":13,"endColumn":35},{"ruleId":"118","severity":1,"message":"119","line":14,"column":23,"nodeType":"120","endLine":14,"endColumn":35},{"ruleId":"118","severity":1,"message":"119","line":15,"column":23,"nodeType":"120","endLine":15,"endColumn":35},{"ruleId":"118","severity":1,"message":"119","line":16,"column":23,"nodeType":"120","endLine":16,"endColumn":35},{"ruleId":"118","severity":1,"message":"119","line":17,"column":23,"nodeType":"120","endLine":17,"endColumn":35},{"ruleId":"121","severity":1,"message":"122","line":1,"column":28,"nodeType":"123","messageId":"124","endLine":1,"endColumn":36},{"ruleId":"112","severity":1,"message":"113","line":17,"column":6,"nodeType":"114","endLine":17,"endColumn":8,"suggestions":"125"},{"ruleId":"121","severity":1,"message":"126","line":3,"column":28,"nodeType":"123","messageId":"124","endLine":3,"endColumn":41},{"ruleId":"127","severity":1,"message":"128","line":40,"column":31,"nodeType":"129","messageId":"130","endLine":40,"endColumn":33},{"ruleId":"127","severity":1,"message":"128","line":84,"column":29,"nodeType":"129","messageId":"130","endLine":84,"endColumn":31},{"ruleId":"127","severity":1,"message":"128","line":127,"column":29,"nodeType":"129","messageId":"130","endLine":127,"endColumn":31},{"ruleId":"112","severity":1,"message":"131","line":13,"column":6,"nodeType":"114","endLine":13,"endColumn":8,"suggestions":"132"},{"ruleId":"133","severity":1,"message":"134","line":23,"column":13,"nodeType":"120","endLine":23,"endColumn":43},{"ruleId":"112","severity":1,"message":"113","line":33,"column":5,"nodeType":"114","endLine":33,"endColumn":7,"suggestions":"135"},{"ruleId":"121","severity":1,"message":"136","line":10,"column":3,"nodeType":"123","messageId":"124","endLine":10,"endColumn":9},{"ruleId":"127","severity":1,"message":"128","line":39,"column":33,"nodeType":"129","messageId":"130","endLine":39,"endColumn":35},{"ruleId":"121","severity":1,"message":"122","line":1,"column":17,"nodeType":"123","messageId":"124","endLine":1,"endColumn":25},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["139"],["137"],["138"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar",["140"],"'setPostAction' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has a missing dependency: 'location.post'. Either include it or remove the dependency array.",["141"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["142"],"'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"143","fix":"144"},{"desc":"143","fix":"145"},{"desc":"146","fix":"147"},{"desc":"143","fix":"148"},"Update the dependencies array to be: [dispatch]",{"range":"149","text":"150"},{"range":"151","text":"150"},"Update the dependencies array to be: [location.post]",{"range":"152","text":"153"},{"range":"154","text":"150"},[1096,1098],"[dispatch]",[657,659],[417,419],"[location.post]",[929,931]]