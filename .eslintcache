[{"C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\index.js":"1","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\reportWebVitals.js":"2","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\firebase.js":"3","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\admin\\Admin.jsx":"4","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\store\\index.js":"5","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\App.js":"6","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\store\\reducers\\index.js":"7","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\store\\reducers\\posts.js":"8","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\store\\selectors\\index.js":"9","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\Footer.jsx":"10","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\Header.jsx":"11","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\Posts.jsx":"12","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\services\\posts.firebase.api.js":"13","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\store\\actions\\posts.actions.js":"14","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\store\\actions\\actions.types.js":"15","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\admin\\AdminPosts.jsx":"16","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\Post.jsx":"17","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\admin\\PostContentForm.jsx":"18","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\LatestPosts.jsx":"19","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\admin\\AdminMenu.jsx":"20","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\admin\\Signup.jsx":"21","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\Auth.js":"22","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\PrivateRoute.jsx":"23","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\admin\\Login.jsx":"24"},{"size":351,"mtime":1608070508220,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":499162500000,"results":"27","hashOfConfig":"26"},{"size":743,"mtime":1608057971903,"results":"28","hashOfConfig":"26"},{"size":1780,"mtime":1608074781730,"results":"29","hashOfConfig":"26"},{"size":333,"mtime":1608048683703,"results":"30","hashOfConfig":"26"},{"size":1059,"mtime":1608061768977,"results":"31","hashOfConfig":"26"},{"size":156,"mtime":1607338563014,"results":"32","hashOfConfig":"26"},{"size":987,"mtime":1608074823954,"results":"33","hashOfConfig":"26"},{"size":74,"mtime":1607252723518,"results":"34","hashOfConfig":"26"},{"size":895,"mtime":1607246146661,"results":"35","hashOfConfig":"26"},{"size":1364,"mtime":1608126903321,"results":"36","hashOfConfig":"26"},{"size":2323,"mtime":1608057534211,"results":"37","hashOfConfig":"26"},{"size":1769,"mtime":1608057803590,"results":"38","hashOfConfig":"26"},{"size":1289,"mtime":1608074821788,"results":"39","hashOfConfig":"26"},{"size":160,"mtime":1607879992302,"results":"40","hashOfConfig":"26"},{"size":5647,"mtime":1607968186371,"results":"41","hashOfConfig":"26"},{"size":1031,"mtime":1607769313108,"results":"42","hashOfConfig":"26"},{"size":5715,"mtime":1608057407992,"results":"43","hashOfConfig":"26"},{"size":2009,"mtime":1607851889336,"results":"44","hashOfConfig":"26"},{"size":1017,"mtime":1608058627789,"results":"45","hashOfConfig":"26"},{"size":2324,"mtime":1608061609795,"results":"46","hashOfConfig":"26"},{"size":462,"mtime":1608058921796,"results":"47","hashOfConfig":"26"},{"size":522,"mtime":1608062267458,"results":"48","hashOfConfig":"26"},{"size":1497,"mtime":1608071555490,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"6k9swz",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\index.js",[],["105","106"],"C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\reportWebVitals.js",[],"C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\firebase.js",[],"C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\admin\\Admin.jsx",["107"],"C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\store\\index.js",[],"C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\App.js",[],"C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\store\\reducers\\index.js",[],"C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\store\\reducers\\posts.js",[],"C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\store\\selectors\\index.js",[],"C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\Footer.jsx",["108","109","110","111","112"],"C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\Header.jsx",[],"C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\Posts.jsx",["113","114"],"import React, { useEffect, useState } from 'react'\r\nimport '../styles/posts.css'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getPostsAction } from '../store/actions/posts.actions';\r\nimport { getPostsSelector } from '../store/selectors';\r\nimport { Backdrop, CircularProgress } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport { LatestPosts } from '../components/LatestPosts'\r\n\r\nexport const Posts = () => {\r\n  const dispatch = useDispatch(); \r\n  const posts = useSelector(getPostsSelector)\r\n\r\n  useEffect(() => {\r\n    dispatch(getPostsAction());\r\n  }, [])\r\n\r\n  const truncate = (str, n) => {\r\n    return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\r\n  }\r\n  \r\n  const useStyles = makeStyles((theme) => ({\r\n    backdrop: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      color: '#fff',\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className=\"posts\">\r\n      {posts.length > 0 ?\r\n        <div className=\"band\">\r\n         { posts.map((item, index) => {\r\n              return (\r\n                <div className={`${!index && \"item-1\" }`} key={item.title} data-aos=\"fade-right\">\r\n                  <Link to={{\r\n                    pathname:\"/post\",\r\n                    post: item\r\n                  }} params={item} className=\"card\">\r\n                    <div className=\"thumb\" style={{backgroundImage: `url(${item.image})`}}></div>\r\n                    <article>\r\n                      <h1>{item.title}</h1>\r\n                      <h3>{item.catagory}</h3>\r\n                      <p>{truncate(item?.description, 150)}</p>\r\n                      <span>{item.timestamp.toDate().toString()}</span>\r\n                    </article>\r\n                  </Link>\r\n                </div>\r\n              )\r\n            })\r\n          }\r\n          </div>\r\n          :\r\n          <Backdrop className={classes.backdrop} open>\r\n            <CircularProgress color=\"inherit\" />\r\n          </Backdrop>\r\n      }\r\n      <LatestPosts posts={posts}/>\r\n\r\n      <div className=\"virtues-siders-wrapper\">\r\n        <div className=\"virtues-siders\">\r\n          <h1>VIRTUES</h1>\r\n        </div>\r\n        <div className=\"virtues-siders\">\r\n          <h1>VIRTUES</h1>\r\n        </div>\r\n      </div>      \r\n  </div>\r\n  )\r\n}","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\services\\posts.firebase.api.js",[],"C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\store\\actions\\posts.actions.js",[],"C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\store\\actions\\actions.types.js",[],"C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\admin\\AdminPosts.jsx",["115","116","117","118","119"],"import React from 'react';\r\nimport '../../styles/adminPosts.css';\r\nimport { deletePostAction, setPostAction } from '../../store/actions/posts.actions';\r\nimport { useDispatch } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nexport const AdminPosts = ({ allPosts, handleEdit }) => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n      justifyContent: 'space-around',\r\n      overflow: 'hidden',\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    gridList: {\r\n      flexWrap: 'nowrap',\r\n      // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\r\n      transform: 'translateZ(0)',\r\n    },\r\n    title: {\r\n      color: theme.palette.primary.light,\r\n    },\r\n    titleBar: {\r\n      background:\r\n        'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleDelete = (post) => {\r\n    dispatch(deletePostAction(post))\r\n  }\r\n  \r\n  return (\r\n    <div className=\"admin-posts\">\r\n      <div className=\"beauty_posts\">\r\n        <h1>BEAUTY POSTS...</h1>\r\n        <div className={classes.root}>\r\n          <GridList className={classes.gridList} cols={2.5}>\r\n            {allPosts.map((item) => {\r\n              if(item.catagory === 'beauty') {\r\n                return (\r\n                  <GridListTile key={item.image}>\r\n                    <img src={item.image} alt={item.title} />\r\n                    <GridListTileBar\r\n                      title={item.title}\r\n                      actionIcon={\r\n                        <IconButton aria-label={`star ${item.title}`}>\r\n                          <DeleteIcon onClick={() => handleDelete(item)} className={classes.title} />\r\n                          <EditIcon onClick={() => handleEdit(item)} className={classes.title} />\r\n                        </IconButton>\r\n                      }\r\n                    />\r\n                  </GridListTile>\r\n                )\r\n              }\r\n            }\r\n            )}\r\n          </GridList>\r\n        </div>\r\n      </div>\r\n      <div className=\"food_posts\">\r\n      <h1>FOOD POSTS...</h1>\r\n        <div className={classes.root}>\r\n          <GridList className={classes.gridList} cols={2.5}>\r\n            {allPosts.map((item) => {\r\n              if(item.catagory === 'food') {\r\n                return (\r\n                  <GridListTile key={item.image}>\r\n                    <img src={item.image} alt={item.title} />\r\n                    <GridListTileBar\r\n                      title={item.title}\r\n                      actionIcon={\r\n                        <IconButton aria-label={`star ${item.title}`}>\r\n                          <DeleteIcon onClick={() => handleDelete(item)} className={classes.title} />\r\n                          <EditIcon onClick={() => handleEdit(item)} className={classes.title} />\r\n                        </IconButton>\r\n                      }\r\n                    />\r\n                  </GridListTile>\r\n                )\r\n              }\r\n            }\r\n            )}\r\n          </GridList>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"life_posts\">\r\n        <h1>LIFE POSTS...</h1>\r\n        <div className={classes.root}>\r\n          <GridList className={classes.gridList} cols={2.5}>\r\n            {allPosts.map((item) => {\r\n              if(item.catagory === 'life') {\r\n                return (\r\n                  <GridListTile key={item.image}>\r\n                    <img src={item.image} alt={item.title} />\r\n                    <GridListTileBar\r\n                      title={item.title}\r\n                      actionIcon={\r\n                        <IconButton aria-label={`star ${item.title}`}>\r\n                          <DeleteIcon onClick={() => handleDelete(item)} className={classes.title} />\r\n                          <EditIcon onClick={() => handleEdit(item)} className={classes.title} />\r\n                        </IconButton>\r\n                      }\r\n                    />\r\n                  </GridListTile>\r\n                )\r\n              }\r\n            }\r\n            )}\r\n          </GridList>\r\n        </div>\r\n      </div>\r\n      <div className=\"life_posts\">\r\n        <h1>B&S POSTS...</h1>\r\n        <div className={classes.root}>\r\n          <GridList className={classes.gridList} cols={2.5}>\r\n            {allPosts.map((item) => {\r\n              if(item.catagory === 'body and soul') {\r\n                return (\r\n                  <GridListTile key={item.image}>\r\n                    <img src={item.image} alt={item.title} />\r\n                    <GridListTileBar\r\n                      title={item.title}\r\n                      actionIcon={\r\n                        <IconButton aria-label={`star ${item.title}`}>\r\n                          <DeleteIcon onClick={() => handleDelete(item)} className={classes.title} />\r\n                          <EditIcon onClick={() => handleEdit(item)} className={classes.title} />\r\n                        </IconButton>\r\n                      }\r\n                    />\r\n                  </GridListTile>\r\n                )\r\n              }\r\n            }\r\n            )}\r\n          </GridList>\r\n        </div>\r\n      </div>\r\n     \r\n    </div>\r\n  )\r\n}","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\Post.jsx",["120","121"],"C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\admin\\PostContentForm.jsx",["122"],"import React, { useState, useEffect } from 'react';\r\nimport '../../styles/postContentForm.css';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getPostsAction, createPostAction, setPostAction } from '../../store/actions/posts.actions';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport { storage } from '../../firebase';\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Select,\r\n  MenuItem,\r\n  InputLabel,\r\n  FormControl\r\n} from '@material-ui/core'\r\n\r\nexport const PostContentForm = ({ editPost, setEditPost }) => {\r\n  const [ image, setImage ] = useState(null);\r\n  const [ value, setValue ] = useState('');\r\n  const [ editValue, setEditValue ] = useState('');\r\n  const [ readyToPost, setReadyToPost ] = useState(false)\r\n  const [ newPost, setNewPost ] = useState({\r\n    imageURL: '',\r\n    catagory: '',\r\n    title: '',\r\n    description: '',\r\n    content: value\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    setEditValue(editPost.content)\r\n  }, [editPost])\r\n\r\n  useEffect(() => {\r\n    dispatch(getPostsAction())\r\n  },[])  \r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if(editPost.title.length === 0) {\r\n      const uploadTask = storage.ref(`images/${image.name}`).put(image);\r\n      uploadTask.on(\r\n        'state_changed', (snapshot) => {\r\n          const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n          console.log('Upload is ' + progress + '% done');\r\n        }, (error) => {\r\n          console.log(error)\r\n        },\r\n        () => {\r\n          uploadTask.snapshot.ref.getDownloadURL().then((url) => {\r\n            let uploadedPost = Object.assign(newPost, {imageURL:url})\r\n            setNewPost(uploadedPost);\r\n            dispatch(createPostAction(uploadedPost))\r\n            console.log('File available at','image const', url);\r\n            resetInputs();\r\n            setValue('')\r\n            setReadyToPost(false)\r\n          })\r\n        }\r\n      )\r\n    } else {\r\n      dispatch(setPostAction(editPost))\r\n      resetInputs();\r\n      setEditPost('')\r\n      setReadyToPost(false)\r\n    }\r\n  }\r\n\r\n  const resetInputs = () => {\r\n    setNewPost({\r\n      imageURL: '',\r\n      catagory: '',\r\n      title: '',\r\n      description: '',\r\n      content: ''\r\n    })\r\n    setEditPost({\r\n      id: '',\r\n      imageURL: '',\r\n      catagory: '',\r\n      title: '',\r\n      description: '',\r\n      content: ''\r\n    })\r\n  }\r\n\r\n  const saveEditorContent = () => {\r\n    if(editPost.title.length === 0) {\r\n      setNewPost({\r\n        ...newPost,\r\n        content: value\r\n      })\r\n      setReadyToPost(true)\r\n    } else {\r\n      setEditPost({\r\n        ...editPost,\r\n        content: editValue\r\n      })\r\n      setReadyToPost(true)\r\n    }\r\n  }\r\n    \r\n  return (\r\n    <div className=\"form-container\">\r\n        <FormControl required className=\"post-form\">\r\n          <InputLabel htmlFor=\"atagory-select\">CATAGORY</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"catagory-select\"\r\n              name=\"catagory\"\r\n              value={editPost.catagory ? editPost.catagory : newPost.catagory}\r\n              onChange={(e) => {setNewPost({...newPost, catagory: e.target.value})}}\r\n              >\r\n              <MenuItem value='beauty'>BEAUTY</MenuItem>\r\n              <MenuItem value='body and soul'>BODY & SOUL</MenuItem>\r\n              <MenuItem value='food'>FOOD</MenuItem>\r\n              <MenuItem value='life'>LIFE</MenuItem>\r\n            </Select>\r\n            <TextField\r\n              className=\"input\"\r\n              required\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"title\"\r\n              label=\"POST TITLE\"\r\n              type=\"text\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={editPost.title ? editPost.title : newPost.title}\r\n              onChange={editPost.title ? (e) => setEditPost({...editPost, title: e.target.value}) :(e) => setNewPost({...newPost, title: e.target.value })}\r\n            />\r\n            <TextField\r\n              className=\"input\"\r\n              required\r\n              variant=\"outlined\"\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"description\"\r\n              label=\"DESCRIPTION\"\r\n              type=\"text\"\r\n              fullWidth\r\n              value={editPost.description ? editPost.description : newPost.description}\r\n              onChange={editPost.description ? (e) => setEditPost({...editPost, description: e.target.value}) : (e) => setNewPost({...newPost, description: e.target.value })}\r\n            />\r\n            <TextField\r\n              required\r\n              className=\"input\"\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"image\"\r\n              label=\"image\"\r\n              type=\"file\"\r\n              fullWidth\r\n              onChange={(e) => setImage(e.target.files[0])}\r\n            />\r\n            <ReactQuill className=\"editor-quill\" theme=\"snow\" onChange={editPost.content ? setEditValue : setValue} value={editPost.content ? editValue : value} style={{height:\"400px\"}} />\r\n            <div className=\"btns-group\">\r\n              <Button className=\"btn\" variant=\"contained\" color=\"secondary\" onClick={saveEditorContent}>Save</Button>\r\n              <Button className=\"btn\" onClick={handleSubmit} variant=\"contained\" color=\"secondary\" type=\"submit\" disabled={!readyToPost}>\r\n                {`${editPost.title ? \"Submit Changes\" : \"Submit Post\"}`}\r\n              </Button>\r\n              <Button className=\"btn\" variant=\"contained\" color=\"secondary\" onClick={resetInputs}>\r\n                Cencel\r\n              </Button>\r\n            </div>\r\n        </FormControl>\r\n    </div>\r\n  )\r\n}",["123","124"],"C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\LatestPosts.jsx",["125","126"],"import React from 'react';\r\nimport '../styles/latestPosts.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  Card,\r\n  CardActionArea,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  Button,\r\n  Typography,\r\n} from '@material-ui/core';\r\n\r\nexport const LatestPosts = ({posts}) => {\r\n\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      maxWidth: 345,\r\n    },\r\n    media: {\r\n      height: 140,\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n\r\n  const truncate = (str, n) => {\r\n    return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\r\n  }\r\n\r\n  return (\r\n    <div className=\"latest-posts\">\r\n      <div className=\"latest_posts_wrapper\">\r\n        <div className=\"latest_header\">\r\n          <h3>פוסטים אחרונים</h3>\r\n          <hr/>\r\n        </div>\r\n        <div className=\"latest_posts_posts\">\r\n          {posts && \r\n            posts.map((post, i) => {\r\n              while(i < 3) {\r\n                return (\r\n                  <Card id=\"card\" className={`${classes.root}`} key={post.id}>\r\n                    <CardActionArea>\r\n                      <CardMedia\r\n                        id=\"image\"\r\n                        className={classes.media}\r\n                        image={post.image}\r\n                        title=\"Contemplative Reptile\"\r\n                      />\r\n                      <CardContent>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                          {post.title}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                          {truncate(post.description, 30)}\r\n                        </Typography>\r\n                      </CardContent>\r\n                    </CardActionArea>\r\n                    <CardActions>\r\n                   \r\n                    </CardActions>\r\n                  </Card>\r\n                )\r\n              }\r\n            })\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\admin\\AdminMenu.jsx",["127"],"import React, { useState } from 'react'\r\nimport firebaseApp from '../../firebase'\r\nimport { Button, Tooltip } from '@material-ui/core'\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\r\nexport const AdminMenu = ({ setShowCreatePost, showCreatePost, showPosts, setShowPosts }) => {\r\n\r\n  return (\r\n    <div>\r\n      <Tooltip title=\"Log Out/Log In\">\r\n        <Button variant=\"secondary\" onClick={()=> firebaseApp.auth().signOut()}>\r\n          <VpnKeyIcon />\r\n        </Button>\r\n      </Tooltip>\r\n      <Tooltip title=\"Show/Minimize Compose Post\">\r\n        <Button variant=\"secondary\" onClick={() => setShowCreatePost(!showCreatePost)}>\r\n          <AddIcon />\r\n        </Button>\r\n      </Tooltip>\r\n      <Tooltip title=\"Show/Minimize All Posts\">\r\n        <Button variant=\"secondary\" onClick={() => setShowPosts(!showPosts)}>\r\n          <VisibilityIcon />\r\n        </Button>\r\n      </Tooltip>\r\n    </div>\r\n  )\r\n}","C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\admin\\Signup.jsx",["128"],"C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\Auth.js",[],"C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\PrivateRoute.jsx",[],"C:\\Users\\avire\\Desktop\\LimorBlogProject\\virtues_frontend\\virtues_frontend\\src\\components\\admin\\Login.jsx",[],{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":29,"column":6,"nodeType":"135","endLine":29,"endColumn":8,"suggestions":"136"},{"ruleId":"137","severity":1,"message":"138","line":13,"column":23,"nodeType":"139","endLine":13,"endColumn":35},{"ruleId":"137","severity":1,"message":"138","line":14,"column":23,"nodeType":"139","endLine":14,"endColumn":35},{"ruleId":"137","severity":1,"message":"138","line":15,"column":23,"nodeType":"139","endLine":15,"endColumn":35},{"ruleId":"137","severity":1,"message":"138","line":16,"column":23,"nodeType":"139","endLine":16,"endColumn":35},{"ruleId":"137","severity":1,"message":"138","line":17,"column":23,"nodeType":"139","endLine":17,"endColumn":35},{"ruleId":"140","severity":1,"message":"141","line":1,"column":28,"nodeType":"142","messageId":"143","endLine":1,"endColumn":36},{"ruleId":"133","severity":1,"message":"134","line":17,"column":6,"nodeType":"135","endLine":17,"endColumn":8,"suggestions":"144"},{"ruleId":"140","severity":1,"message":"145","line":3,"column":28,"nodeType":"142","messageId":"143","endLine":3,"endColumn":41},{"ruleId":"146","severity":1,"message":"147","line":51,"column":34,"nodeType":"148","messageId":"149","endLine":51,"endColumn":36},{"ruleId":"146","severity":1,"message":"147","line":77,"column":34,"nodeType":"148","messageId":"149","endLine":77,"endColumn":36},{"ruleId":"146","severity":1,"message":"147","line":104,"column":34,"nodeType":"148","messageId":"149","endLine":104,"endColumn":36},{"ruleId":"146","severity":1,"message":"147","line":130,"column":34,"nodeType":"148","messageId":"149","endLine":130,"endColumn":36},{"ruleId":"133","severity":1,"message":"150","line":13,"column":6,"nodeType":"135","endLine":13,"endColumn":8,"suggestions":"151"},{"ruleId":"152","severity":1,"message":"153","line":23,"column":13,"nodeType":"139","endLine":23,"endColumn":43},{"ruleId":"133","severity":1,"message":"134","line":37,"column":5,"nodeType":"135","endLine":37,"endColumn":7,"suggestions":"154"},{"ruleId":"129","replacedBy":"155"},{"ruleId":"131","replacedBy":"156"},{"ruleId":"140","severity":1,"message":"157","line":10,"column":3,"nodeType":"142","messageId":"143","endLine":10,"endColumn":9},{"ruleId":"146","severity":1,"message":"147","line":39,"column":33,"nodeType":"148","messageId":"149","endLine":39,"endColumn":35},{"ruleId":"140","severity":1,"message":"141","line":1,"column":17,"nodeType":"142","messageId":"143","endLine":1,"endColumn":25},{"ruleId":"140","severity":1,"message":"158","line":1,"column":27,"nodeType":"142","messageId":"143","endLine":1,"endColumn":38},"no-native-reassign",["159"],"no-negated-in-lhs",["160"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["161"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar",["162"],"'setPostAction' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has a missing dependency: 'location.post'. Either include it or remove the dependency array.",["163"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["164"],["159"],["160"],"'Button' is defined but never used.","'useCallback' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"165","fix":"166"},{"desc":"165","fix":"167"},{"desc":"168","fix":"169"},{"desc":"165","fix":"170"},"Update the dependencies array to be: [dispatch]",{"range":"171","text":"172"},{"range":"173","text":"172"},"Update the dependencies array to be: [location.post]",{"range":"174","text":"175"},{"range":"176","text":"172"},[884,886],"[dispatch]",[657,659],[417,419],"[location.post]",[1076,1078]]